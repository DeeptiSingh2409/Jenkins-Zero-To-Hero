pipeline {
  agent any

  environment {
    SONAR_URL = "http://172.166.178.227:9000"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "DeeptiSingh2409"
    DOCKER_IMAGE = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build and Test') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh '''
              mvn sonar:sonar \
                -Dsonar.login=${SONAR_AUTH_TOKEN} \
                -Dsonar.host.url=${SONAR_URL}
            '''
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
            sh '''
              docker build -t ${DOCKER_IMAGE} .
              echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
              docker push ${DOCKER_IMAGE}
              docker logout
            '''
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config --global user.email "thedeeptisingh@gmail.com"
            git config --global user.name "DeeptiSingh2409"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }

  post {
    success {
      echo "✅ Pipeline completed successfully!"
    }
    failure {
      echo "❌ Pipeline failed at stage: ${env.STAGE_NAME}"
    }
  }
}
